name: Deploy to ECR

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: deploy to cluster
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3


      # Github action -> AWS ECR
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ca-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ env.ECR_REGISTRY}}
          ECR_REPOSITORY: ${{env.ECR_REPOSITORY }}
          IMAGE_TAG: latest
        run: |
          docker build -t ${{ env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY }}:latest nginx/
          docker push ${{ env.ECR_REGISTRY}}/${{env.ECR_REPOSITORY }}:latest

      # Deploy to EKS Cluster
      - name: deploy to cluster
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
          ECR_REGISTRY: ${{ env.ECR_REGISTRY}}
          ECR_REPOSITORY: ${{env.ECR_REPOSITORY }}
          IMAGE_TAG: latest
        with:
          args: set image deployment/$ECR_REPOSITORY $ECR_REPOSITORY=$ECR_REGISTRY/$ECR_REPOSITORY:latest
          
      - name: verify deployment
        uses: kodermax/kubectl-aws-eks@master
        env:
          KUBE_CONFIG_DATA: ${{ secrets.KUBE_CONFIG_DATA }}
        with:
          args: rollout status deployment/${{env.ECR_REPOSITORY }}






# name: Deploy to ECR

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     name: deploy
#     runs-on: ubuntu-latest

#     steps:
#       - name: Checkout
#         uses: actions/checkout@v3

#       - name: Configure AWS credentials
#         uses: aws-actions/configure-aws-credentials@v1
#         with:
#           aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
#           aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#           aws-region: ca-central-1

#       - name: Login to Amazon ECR
#         id: login-ecr
#         uses: aws-actions/amazon-ecr-login@v1

#       - name: Build, tag, and push image to Amazon ECR
#         env:
#           ECR_REGISTRY: 940168446867.dkr.ecr.ca-central-1.amazonaws.com
#           ECR_REPOSITORY: mydjango
#           IMAGE_TAG: latest
#         run: |
#           docker build -t 940168446867.dkr.ecr.ca-central-1.amazonaws.com/mynginx:latest nginx/
#           docker push 940168446867.dkr.ecr.ca-central-1.amazonaws.com/mynginx:latest


